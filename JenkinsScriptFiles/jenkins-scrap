docker tag SOURCE_IMAGE[:TAG] 10.10.20.133/demo-ns1/IMAGE[:TAG]


#######################################

 pipeline{
     agent('jenkins-slave')

	stages {

    stage('Checkout Source') {
      steps {
        git ''https://github.com/reagul/simple-java-maven-app.git'
      }
    }

    
}  


########################################
 pipeline{
     agent { label 'jenkins-slave' }

	stages {

    stage('Checkout Source') {
      steps {
        git 'http://10.10.20.146:3000/paul/simple-java-maven-app.git'
                }
        }
    
    stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
    stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
    //stage('Deliver') {
           // steps {
                //sh './jenkins/scripts/deliver.sh'
           // }
       // }
        
        
     stage("Git creds"){
            steps {
            withCredentials([usernamePassword(credentialsId: 'paul-github', passwordVariable: 'GIT_USERNAME', usernameVariable: 'GIT_PASSWORD')]) {
                sh("""
                   pwd
                    mv target/my-app-1.0-SNAPSHOT.jar .
                  
                   git config --global user.email "paul@paul.com"
                   git config --global user.name "paul"
                    git config --local credential.helper "!f() { echo username=paul; echo password=VMware1!; }; f"
                    git add my-app-1.0-SNAPSHOT.jar
                    git commit -m "test jenkins"
                  

                    git push origin master
                    
                    
                """)
            }
        }
     }
        
    	 stage('sleep') {
            steps {
                sh 'echo "Hello World"'
                sh '''
                    pwd
                   
                    sleep 20m
                '''
            }
        }
    
    
        
	}

}


http://10.10.20.146:3000/paul/springboot-jenkins-actuator-rest

$$##########################


 stage("Git creds"){
withCredentials(usernamePassword(credentialsId: GIT_CREDS, passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME'){
sh("""
git config --global credential.username {GIT_USERNAME}
git config --global credential.helper "!echo password={GITPASSWORD}; echo"
git push {your_repository}
""")
}
}


$$$$$$$$$$$$$$$$$$$$$$$$$$



withCredentials([usernamePassword(credentialsId: 'ci-github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                        sh('git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/my-org/my-repo.git')
                    }




333333333333333333333333333333333\\\\


WORKED

git push http://${GIT_USERNAME}:${GIT_PASSWORD}@10.10.20.146:3000/paul/springboot-jenkins-actuator-rest.git
       


@@@@@@@@@@@@@@@@@@@@@ Last known good Jenkins File on 10.10.20.152 @@@@@@@@@@@@@@@@@@@@@@@@

pipeline{
    agent { label 'jenkins-slave' }

	stages {

    stage('Checkout Source') {
      steps {
        git 'http://10.10.20.146:3000/paul/springboot-jenkins-actuator-rest.git'
                }
        }
    
    stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
    stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
    stage("Git creds"){
            steps {
            withCredentials([usernamePassword(credentialsId: 'newpaulgitpwd', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                sh("""
                    pwd
                    mv target/*.jar .
                    git add *.jar
                    
                    git config --global user.email "paul@paul.com"
                    git config --global user.name ${GIT_USERNAME}
                    git config --local credential.helper "!f() { echo username=paul; echo password=${GIT_PASSWORD}; }; f"

                    git commit -m "Paul Checking in via GIT Helper"
                    git push origin master
                    
                """)
            }
        }
        
         
     }
     
    //stage('deploy yml') {
           // steps {
                //sh '''
                  // kubectl apply -f http://10.10.20.146:3000/paul/springboot-jenkins-actuator-rest/raw/branch/master/hello-springboot-actuator.yaml
                   
               // '''
            //}
       // }
        
    //stage('deploy Yaml') {
    //steps{
    //withKubeConfig([credentialsId: 'pacifickube', serverUrl: 'http://10.10.20.152:8080']) {
     // sh 'kubectl apply -f http://10.10.20.146:3000/paul/springboot-jenkins-actuator-rest/raw/branch/master/hello-springboot-actuator.yaml'
        // }
    //}
    //}
    stage('Deploy App') {
      steps {
        script {
          kubernetesDeploy(configs: "hello-springboot-actuator.yaml", kubeconfigId: "pacifickube")
        }
      }
    }
     
     stage('sleep') {
            steps {
                sh '''
                    pwd
                   
                    sleep 10m
                '''
            }
        }

    
        
	}

}             
